name: Release (Production)

on:
  workflow_dispatch: {}
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "**/v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: read # Default for all jobs to checkout the repository

env:
  GO_VERSION: 1.24.x

jobs:
  set-matrix:
    name: Set Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix
        id: set-matrix
        run: |
          echo "matrix={\"go-version\":[\"${{ env.GO_VERSION }}\"],\"platform\":[\"ubuntu-latest\",\"macos-latest\",\"windows-latest\"]}" >> $GITHUB_OUTPUT

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
      - uses: actions/setup-go@c4c114188661c0fa735e5b938764519fc6e8efa9
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84
        with:
          version: v1.64.5

  test:
    name: Test
    needs: set-matrix
    strategy:
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@c4c114188661c0fa735e5b938764519fc6e8efa9
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          cache-dependency-path: "**/go.sum"
      - name: Run tests
        run: |
          go test ./... -coverprofile coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write # For pushing to GHCR
      contents: read # For checkout
      attestations: write # For managing attestations
      id-token: write # For OIDC token usage
    needs:
      - test
      - lint
    env:
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@c4c114188661c0fa735e5b938764519fc6e8efa9
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: "**/go.sum"

      - name: Login to Docker Hub and GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and release
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3
        with:
          version: v2.7.0
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GHCR_PAT }}

      - name: Enable experimental Docker features
        run: |
          mkdir -p ~/.docker/ && \
          echo '{"experimental": "enabled"}' > ~/.docker/config.json

      - name: Create and push Docker manifests
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          GHCR_USER: ${{ secrets.BOT_USERNAME }}
          GHCR_TOKEN: ${{ secrets.BOT_GHCR_PAT }}
        run: |
          # Login to Docker Hub and GHCR (redundant but ensures manifest push works)
          echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin

          # Get the tag without the 'v' prefix
          TAG="${GITHUB_REF_NAME#v}"

          # Architectures to include in manifests
          ARCHES=("amd64" "i386" "armhf" "arm64v8")

          # Function to create and push manifests
          create_and_push_manifest() {
            local repo="$1"
            local tag="$2"
            local manifest="${repo}:${tag}"
            local images=()

            # Collect images for the manifest
            for arch in "${ARCHES[@]}"; do
              images+=("${repo}:${arch}-${tag}")
            done

            # Create the manifest
            docker manifest create "$manifest" "${images[@]}"

            # Push the manifest
            docker manifest push "$manifest"
          }

          # Create and push manifests for Docker Hub
          create_and_push_manifest "nickfedor/watchtower" "latest"
          create_and_push_manifest "nickfedor/watchtower" "$TAG"

          # Create and push manifests for GHCR
          create_and_push_manifest "ghcr.io/nicholas-fedor/watchtower" "latest"
          create_and_push_manifest "ghcr.io/nicholas-fedor/watchtower" "$TAG"

  renew-docs:
    name: Refresh pkg.go.dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Pull new module version
        uses: nicholas-fedor/go-proxy-pull-action@96d97dd65179161a3d0a38e65a49ebfd55dcfd69
