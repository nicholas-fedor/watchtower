#
# Builder
#

FROM golang:alpine@sha256:aee43c3ccbf24fdffb7295693b6e33b21e01baec1b2a55acc351fde345e9ec34 AS builder

# use version (for example "v0.3.3") or "main"
ARG WATCHTOWER_VERSION=dev

# Pre download required modules to avoid redownloading at each build thanks to docker layer caching.
# Copying go.mod and go.sum ensure to invalid the layer/build cache if there is a change in module requirement
WORKDIR /watchtower
COPY go.mod .
COPY go.sum .
RUN go mod download

RUN apk add --no-cache \
    alpine-sdk \
    ca-certificates \
    git \
    tzdata

COPY . /watchtower

RUN cd /watchtower && \
    VERSION="${WATCHTOWER_VERSION}" && \
    if [ -d .git ]; then VERSION=$(git describe --tags 2>/dev/null || echo "${WATCHTOWER_VERSION}"); fi && \
    GO111MODULE=on CGO_ENABLED=0 go build -a -ldflags "-extldflags '-static' -X github.com/nicholas-fedor/watchtower/internal/meta.Version=${VERSION} -X github.com/nicholas-fedor/watchtower/pkg/registry/digest.UserAgent=Watchtower/v${VERSION}" .


#
# watchtower
#

FROM scratch

LABEL \
    "com.centurylinklabs.watchtower"="true" \
    "org.opencontainers.image.url"="https://watchtower.nickfedor.com" \
    "org.opencontainers.image.documentation"="https://watchtower.nickfedor.com" \
    "org.opencontainers.image.source"="https://github.com/nicholas-fedor/watchtower" \
    "org.opencontainers.image.licenses"="Apache-2.0" \
    "org.opencontainers.image.title"="Watchtower" \
    "org.opencontainers.image.description"="A process for automating Docker container base image updates." \
    "org.opencontainers.image.base.name"="alpine"

# copy files from other container
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo
COPY --from=builder /watchtower/watchtower /watchtower

HEALTHCHECK CMD [ "/watchtower", "--health-check"]

ENTRYPOINT ["/watchtower"]
